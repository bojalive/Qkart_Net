// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Qkart_WebAPI.Data;

#nullable disable

namespace QkartWebAPI.Migrations
{
    [DbContext(typeof(QkartDbContext))]
    [Migration("20230126050800_selleradded")]
    partial class selleradded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Qkart_WebAPI.Models.LinkProductSeller", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SellerId")
                        .HasColumnType("int");

                    b.Property<int>("SellerPrice")
                        .HasColumnType("int");

                    b.Property<string>("SpecialDetails")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("SellerId");

                    b.ToTable("LinkProductSellers");
                });

            modelBuilder.Entity("Qkart_WebAPI.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Catagory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Cost")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ebed91bc-19d2-401f-843a-0491d21b8770"),
                            Catagory = "Mobile",
                            Cost = 12500,
                            CreatedDate = new DateTime(2023, 1, 26, 10, 38, 0, 411, DateTimeKind.Local).AddTicks(6469),
                            Name = "Asus ZenPhone M2 Mobile Phone",
                            Rating = 4.0,
                            UpdatedDate = new DateTime(2023, 1, 26, 10, 38, 0, 411, DateTimeKind.Local).AddTicks(6478)
                        },
                        new
                        {
                            Id = new Guid("c25ef392-45c5-4cae-865f-16ce8f9795b7"),
                            Catagory = "Mobile",
                            Cost = 8500,
                            CreatedDate = new DateTime(2023, 1, 26, 10, 38, 0, 411, DateTimeKind.Local).AddTicks(6480),
                            Name = "MI Some Mobile",
                            Rating = 4.0999999999999996,
                            UpdatedDate = new DateTime(2023, 1, 26, 10, 38, 0, 411, DateTimeKind.Local).AddTicks(6480)
                        });
                });

            modelBuilder.Entity("Qkart_WebAPI.Models.Seller", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullAddress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SellerName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SpecialDetails")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sellers");
                });

            modelBuilder.Entity("Qkart_WebAPI.Models.LinkProductSeller", b =>
                {
                    b.HasOne("Qkart_WebAPI.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Qkart_WebAPI.Models.Seller", "Seller")
                        .WithMany()
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Seller");
                });
#pragma warning restore 612, 618
        }
    }
}
